{"version":3,"sources":["components/Pvp.js","components/Solo.js","App.js","serviceWorker.js","index.js"],"names":["Pvp","useState","turn","setTurn","cell1","cell2","cell3","cell4","cell5","cell6","cell7","cell8","cell9","grid","setGrid","display","style","setStyle","msg","setMsg","winningCombo","handleClick","cell","useEffect","a","some","combo","every","includes","Object","values","value","className","onClick","window","location","reload","Solo","play1st","setPlay1st","playerMark","setPlayerMark","appMark","setAppMark","nextCell","nextCell2","potentialWin","steps","appTurn","totalPlayerMarks","totalAppMarks","filter","mark","length","winner","find","c","concat","flexDirection","alignItems","width","justifyContent","type","name","checked","onChange","e","target","navStyle","fontSize","fontFamily","textDecoration","fontWeight","color","App","height","activeStyle","to","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b127cf4f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Pvp() {\n  const [turn, setTurn] = useState(\"x\");\n  const [grid, setGrid] = useState({\n    cell1: \"\",\n    cell2: \"\",\n    cell3: \"\",\n    cell4: \"\",\n    cell5: \"\",\n    cell6: \"\",\n    cell7: \"\",\n    cell8: \"\",\n    cell9: \"\",\n  });\n  const [style, setStyle] = useState({ display: \"none\" });\n  const [msg, setMsg] = useState(\"\");\n\n  const winningCombo = [\n    [grid.cell1, grid.cell2, grid.cell3],\n    [grid.cell4, grid.cell5, grid.cell6],\n    [grid.cell7, grid.cell8, grid.cell9],\n    [grid.cell1, grid.cell4, grid.cell7],\n    [grid.cell2, grid.cell5, grid.cell8],\n    [grid.cell3, grid.cell6, grid.cell9],\n    [grid.cell1, grid.cell5, grid.cell9],\n    [grid.cell3, grid.cell5, grid.cell7],\n  ];\n\n  const handleClick = (cell) => {\n    if (!grid[cell]) {\n      setGrid({ ...grid, [cell]: turn });\n\n      if (turn === \"o\") {\n        setTurn(\"x\");\n      } else {\n        setTurn(\"o\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    let a;\n    switch (turn) {\n      case \"x\":\n        a = \"o\";\n        break;\n      case \"o\":\n        a = \"x\";\n    }\n    if (winningCombo.some((combo) => combo.every((cell) => cell.includes(a)))) {\n      setMsg(a + \" wins!\");\n\n      setStyle({\n        display: \"flex\",\n      });\n    } else if (\n      Object.values(grid).every((value) => value === \"x\" || value === \"o\")\n    ) {\n      setMsg(\"It's a draw!\");\n      setStyle({\n        display: \"flex\",\n      });\n    }\n  }, [grid]);\n\n  const restart = () => {\n    window.location.reload(false);\n  };\n\n  return (\n    <div>\n      <div className={\"grid \" + turn}>\n        <div\n          className={\"cell \" + grid.cell1}\n          onClick={() => {\n            handleClick(\"cell1\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell2}\n          onClick={() => {\n            handleClick(\"cell2\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell3}\n          onClick={() => {\n            handleClick(\"cell3\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell4}\n          onClick={() => {\n            handleClick(\"cell4\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell5}\n          onClick={() => {\n            handleClick(\"cell5\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell6}\n          onClick={() => {\n            handleClick(\"cell6\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell7}\n          onClick={() => {\n            handleClick(\"cell7\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell8}\n          onClick={() => {\n            handleClick(\"cell8\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell9}\n          onClick={() => {\n            handleClick(\"cell9\");\n          }}\n        ></div>\n      </div>\n      <div className=\"winning-msg\" style={style}>\n        <div> {msg} </div>\n        <button className=\"restart\" onClick={restart}>\n          Restart\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Pvp;\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Solo() {\n  const [play1st, setPlay1st] = useState(true);\n  const [playerMark, setPlayerMark] = useState(\"x\");\n  const [appMark, setAppMark] = useState(\"o\");\n  const [style, setStyle] = useState({ display: \"none\" });\n  const [msg, setMsg] = useState(\"\");\n  const [grid, setGrid] = useState({\n    cell1: \"\",\n    cell2: \"\",\n    cell3: \"\",\n    cell4: \"\",\n    cell5: \"\",\n    cell6: \"\",\n    cell7: \"\",\n    cell8: \"\",\n    cell9: \"\",\n  });\n\n  const winningCombo = [\n    [\"cell1\", \"cell2\", \"cell3\"],\n    [\"cell4\", \"cell5\", \"cell6\"],\n    [\"cell7\", \"cell8\", \"cell9\"],\n    [\"cell1\", \"cell4\", \"cell7\"],\n    [\"cell2\", \"cell5\", \"cell8\"],\n    [\"cell3\", \"cell6\", \"cell9\"],\n    [\"cell1\", \"cell5\", \"cell9\"],\n    [\"cell3\", \"cell5\", \"cell7\"],\n  ];\n\n  useEffect(() => {\n    if (play1st) {\n      setPlayerMark(\"x\");\n      setAppMark(\"o\");\n    } else {\n      setPlayerMark(\"o\");\n      setAppMark(\"x\");\n    }\n  }, [play1st]);\n\n  const handleClick = (cell) => {\n    if (!grid[cell]) {\n      setGrid({ ...grid, [cell]: playerMark });\n    }\n  };\n\n  let nextCell;\n  let nextCell2;\n  let potentialWin;\n  let totalPlayerMarks = 0;\n  let totalAppMarks = 0;\n  let steps;\n  let appTurn;\n\n  useEffect(() => {\n    totalAppMarks = Object.values(grid).filter((mark) => mark === appMark)\n      .length;\n    totalPlayerMarks = Object.values(grid).filter((mark) => mark === playerMark)\n      .length;\n    switch (play1st) {\n      case true:\n        appTurn = totalPlayerMarks > totalAppMarks;\n        break;\n      case false:\n        appTurn = totalPlayerMarks === totalAppMarks;\n    }\n    let winner = winningCombo.find((combo) =>\n      [\"xxx\", \"ooo\"].includes(grid[combo[0]] + grid[combo[1]] + grid[combo[2]])\n    );\n    if (winner) {\n      switch (grid[winner[0]]) {\n        case playerMark:\n          setMsg(\"you win!\");\n\n          setStyle({\n            display: \"flex\",\n          });\n          break;\n        case appMark:\n          setMsg(\"you lose!\");\n\n          setStyle({\n            display: \"flex\",\n          });\n      }\n    } else if (\n      Object.values(grid).every((value) => value === \"x\" || value === \"o\")\n    ) {\n      setMsg(\"It's a draw!\");\n      setStyle({\n        display: \"flex\",\n      });\n    } else if (appTurn) {\n      potentialWin = winningCombo.find(\n        (combo) =>\n          grid[combo[0]] + grid[combo[1]] + grid[combo[2]] === appMark + appMark\n      );\n      if (!potentialWin) {\n        potentialWin = winningCombo.find(\n          (combo) =>\n            grid[combo[0]] + grid[combo[1]] + grid[combo[2]] ===\n            playerMark + playerMark\n        );\n      }\n      if (potentialWin) {\n        nextCell = potentialWin.find((c) => !grid[c]);\n      }\n      steps = [\n        \"cell1\",\n        \"cell9\",\n        \"cell3\",\n        \"cell7\",\n        \"cell5\",\n        \"cell2\",\n        \"cell6\",\n        \"cell8\",\n        \"cell4\",\n      ];\n      if (play1st && ['','o'].includes(grid.cell5)) {\n        steps = [\"cell5\", \"cell2\", \"cell6\", \"cell8\", \"cell4\"].concat(steps);\n      }\n      nextCell2 = steps.find((c) => !grid[c]);\n\n      if (nextCell) {\n        setGrid({ ...grid, [nextCell]: appMark });\n      } else if (nextCell2) {\n        setGrid({ ...grid, [nextCell2]: appMark });\n      }\n    }\n  }, [grid, appMark]);\n\n  const restart = () => {\n    window.location.reload(false);\n  };\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n    >\n      <div\n        style={{\n          width: \"250px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <div>\n          <input\n            type=\"radio\"\n            name=\"play-turn\"\n            checked={play1st}\n            onChange={(e) => {\n              setPlay1st(e.target.checked);\n            }}\n          />\n          <label>1st to play</label>\n        </div>\n        <div>\n          <input\n            type=\"radio\"\n            name=\"play-turn\"\n            checked={!play1st}\n            onChange={(e) => {\n              setPlay1st(!e.target.checked);\n            }}\n          />\n          <label>2nd to play</label>\n        </div>\n      </div>\n      <div className={play1st ? \"grid x\" : \"grid o\"}>\n        <div\n          className={\"cell \" + grid.cell1}\n          onClick={() => {\n            handleClick(\"cell1\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell2}\n          onClick={() => {\n            handleClick(\"cell2\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell3}\n          onClick={() => {\n            handleClick(\"cell3\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell4}\n          onClick={() => {\n            handleClick(\"cell4\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell5}\n          onClick={() => {\n            handleClick(\"cell5\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell6}\n          onClick={() => {\n            handleClick(\"cell6\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell7}\n          onClick={() => {\n            handleClick(\"cell7\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell8}\n          onClick={() => {\n            handleClick(\"cell8\");\n          }}\n        ></div>\n        <div\n          className={\"cell \" + grid.cell9}\n          onClick={() => {\n            handleClick(\"cell9\");\n          }}\n        ></div>\n      </div>\n      <div className=\"winning-msg\" style={style}>\n        <div> {msg} </div>\n        <button className=\"restart\" onClick={restart}>\n          Restart\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route, Switch, NavLink } from \"react-router-dom\";\nimport Pvp from \"./components/Pvp\";\nimport Solo from \"./components/Solo\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div\n          style={{\n            width: \"100vw\",\n            height: \"12vh\",\n            display: \"flex\",\n            justifyContent: \"space-around\",\n            alignItems: \"center\",\n          }}\n        >\n          <NavLink style={navStyle} activeStyle={{ color: \"gray\" }} to=\"/pvp\">\n            PvP\n          </NavLink>\n          <NavLink style={navStyle} activeStyle={{ color: \"gray\" }} to=\"/solo\">\n            Solo\n          </NavLink>\n        </div>\n\n        <Switch>\n          <Route path=\"/pvp\" component={Pvp} />\n          <Route path=\"/solo\" component={Solo} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nconst navStyle = {\n  fontSize: \"3rem\",\n  fontFamily: \"monospace\",\n  textDecoration: \"none\",\n  fontWeight: \"bold\",\n  color: \"#000\",\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}